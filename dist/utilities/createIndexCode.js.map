{"version":3,"sources":["../../src/utilities/createIndexCode.js"],"names":["safeVariableName","fileName","indexOfDot","indexOf","safeFileName","slice","_","upperFirst","camelCase","buildExportBlock","files","importBlock","map","join","filePaths","options","code","configCode","banner","banners","isArray","forEach","config","size","JSON","stringify","length","sortedFilePaths","sort"],"mappings":";;;;;;AAAA;;;;;;AAEA,MAAMA,mBAAoBC,QAAD,IAAc;AACrC,QAAMC,aAAaD,SAASE,OAAT,CAAiB,GAAjB,CAAnB;AACA,MAAIC,eAAeH,QAAnB;;AAEA,MAAIC,eAAe,CAAC,CAApB,EAAuB;AACrBE,mBAAeH,SAASI,KAAT,CAAe,CAAf,EAAkBH,UAAlB,CAAf;AACD;;AAED,SAAOI,iBAAEC,UAAF,CAAaD,iBAAEE,SAAF,CAAYJ,YAAZ,CAAb,CAAP;AACD,CATD;;AAWA,MAAMK,mBAAoBC,KAAD,IAAW;AAClC,MAAIC,WAAJ;;AAEAA,gBAAcL,iBAAEM,GAAF,CAAMF,KAAN,EAAcT,QAAD,IAAc;AACvC,WAAO,yBAAyBD,iBAAiBC,QAAjB,CAAzB,GAAsD,cAAtD,GAAuEA,QAAvE,GAAkF,KAAzF;AACD,GAFa,CAAd;;AAIAU,gBAAcA,YAAYE,IAAZ,CAAiB,IAAjB,CAAd;;AAEA,SAAOF,WAAP;AACD,CAVD;;kBAYe,UAACG,SAAD,EAA6B;AAAA,MAAjBC,OAAiB,uEAAP,EAAO;;AAC1C,MAAIC,IAAJ;AACA,MAAIC,UAAJ;;AAEAD,SAAO,EAAP;AACAC,eAAa,EAAb;;AAEA,MAAIF,QAAQG,MAAZ,EAAoB;AAClB,UAAMC,UAAUb,iBAAEc,OAAF,CAAUL,QAAQG,MAAlB,IAA4BH,QAAQG,MAApC,GAA6C,CAACH,QAAQG,MAAT,CAA7D;;AAEAC,YAAQE,OAAR,CAAiBH,MAAD,IAAY;AAC1BF,cAAQE,SAAS,IAAjB;AACD,KAFD;;AAIAF,YAAQ,IAAR;AACD;;AAED,MAAID,QAAQO,MAAR,IAAkBhB,iBAAEiB,IAAF,CAAOR,QAAQO,MAAf,IAAyB,CAA/C,EAAkD;AAChDL,kBAAc,MAAMO,KAAKC,SAAL,CAAeV,QAAQO,MAAvB,CAApB;AACD;;AAEDN,UAAQ,qBAAqBC,UAArB,GAAkC,MAA1C;;AAEA,MAAIH,UAAUY,MAAd,EAAsB;AACpB,UAAMC,kBAAkBb,UAAUc,IAAV,EAAxB;;AAEAZ,YAAQP,iBAAiBkB,eAAjB,IAAoC,MAA5C;AACD;;AAED,SAAOX,IAAP;AACD,C","file":"createIndexCode.js","sourcesContent":["import _ from 'lodash';\n\nconst safeVariableName = (fileName) => {\n  const indexOfDot = fileName.indexOf('.');\n  let safeFileName = fileName\n\n  if (indexOfDot !== -1) {\n    safeFileName = fileName.slice(0, indexOfDot);\n  }\n\n  return _.upperFirst(_.camelCase(safeFileName));\n};\n\nconst buildExportBlock = (files) => {\n  let importBlock;\n\n  importBlock = _.map(files, (fileName) => {\n    return 'export { default as ' + safeVariableName(fileName) + ' } from \\'./' + fileName + '\\';';\n  });\n\n  importBlock = importBlock.join('\\n');\n\n  return importBlock;\n};\n\nexport default (filePaths, options = {}) => {\n  let code;\n  let configCode;\n\n  code = '';\n  configCode = '';\n\n  if (options.banner) {\n    const banners = _.isArray(options.banner) ? options.banner : [options.banner];\n\n    banners.forEach((banner) => {\n      code += banner + '\\n';\n    });\n\n    code += '\\n';\n  }\n\n  if (options.config && _.size(options.config) > 0) {\n    configCode += ' ' + JSON.stringify(options.config);\n  }\n\n  code += '// @create-index' + configCode + '\\n\\n';\n\n  if (filePaths.length) {\n    const sortedFilePaths = filePaths.sort();\n\n    code += buildExportBlock(sortedFilePaths) + '\\n\\n';\n  }\n\n  return code;\n};\n"]}